<?php

// $Id$

/**
 * Implementation of hook_requirements().
 */
function hacked_requirements($phase) {
  $requirements = array();

  $t = get_t();

  if ($phase == 'runtime') {
    $version = hacked_cvs_executable_get_version();

    $requirements['hacked_cvs'] = array(
      'title' => $t('Hacked'),
      'severity' => ($version) ? REQUIREMENT_OK : REQUIREMENT_WARNING,
      'value' => ($version) ? $t('CVS executable found: %cvs_version', array('%cvs_version' => $version)) : $t("Could not find the 'cvs' executable. Checking CVS projects will not work correctly."),
    );
  }

  return $requirements;
}

function hacked_install() {
  switch ($GLOBALS['db_type']) {
    case 'mysql':
    case 'mysqli':
      db_query("CREATE TABLE {cache_hacked} (
        cid varchar(255) BINARY NOT NULL default '',
        data longblob,
        expire int NOT NULL default '0',
        created int NOT NULL default '0',
        headers text,
        PRIMARY KEY (cid),
        INDEX expire (expire)
      ) /*!40100 DEFAULT CHARACTER SET UTF8 */ ");

      break;

    case 'pgsql':
      db_query("CREATE TABLE {cache_hacked} (
        cid varchar(255) NOT NULL default '',
        data bytea,
        expire int NOT NULL default '0',
        created int NOT NULL default '0',
        headers text,
        PRIMARY KEY (cid)
      )");

      break;
  }
}

function hacked_uninstall() {
  db_query('DROP TABLE {cache_hacked}');
}
